/* eslint-disable */
// @ts-nocheck
import "@fluencelabs/js-client.node";
import { Fluence } from "@fluencelabs/js-client.api";
import { krasnodar as nodes } from "@fluencelabs/fluence-network-environment";
import { P1Keygen, P2Keygen, generateSessionId } from '@com.silencelaboratories/two-party-ecdsa-js';

import {
  helloWorld,
  helloWorldRemote,
  getInfo,
  getInfos,
  getInfosInParallel,
} from "./aqua/main.js";

const peerIds = nodes.map(({ peerId }) => peerId);
const connectTo = nodes[0].multiaddr;
if (typeof connectTo !== "string") {
  throw new Error("connectTo is not a string");
}

const main = async () => {
  await Fluence.connect(connectTo);

  const helloWorldResult = await helloWorld("Fluence");
  const helloWorldRemoteResult = await helloWorldRemote("Fluence");
  const getInfoResult = await getInfo();
  const getInfosInParallelResult = await getInfosInParallel(peerIds);

  console.log(helloWorldResult);

  process.exit(0);
};

main().catch((error) => {
  console.error(error);
});